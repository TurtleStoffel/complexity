/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import java.io.File
import java.nio.file.Paths

fun printWorkingDirectory() {
    println(Paths.get("").toAbsolutePath().toString())
}

class Repository(
    path: String,
) {
    private val files: List<File> = File(path).walk().toList()

    init {
        println("Repository detected: $path")
    }

    fun printFileCount() {
        val fileCount = files.size
        val typeScriptFileCount = files.filter { it.extension == "ts" }.size
        println("Number of files in repository: $fileCount")
        println("Number of TypeScript files in repository: $typeScriptFileCount")
    }
}

fun main() {
    printWorkingDirectory()

    File("repositories")
        .list()!!
        .filter {
            // Filter hidden folders
            !it.startsWith(".")
        }.map {
            Repository("repositories/$it")
        }.forEach {
            it.printFileCount()
        }
}
